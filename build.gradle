buildscript {
    ext.kotlin_version = '1.3.41'
    ext.spring_boot_version = '2.1.7.RELEASE'
    ext.gradle_docker_version = '0.22.1'
    ext.opensaml_version = '3.3.0'
    ext.detekt_version = '1.0.0.RC8'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:$gradle_docker_version"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

group = 'gdsace'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'com.palantir.docker-run'
apply plugin: 'io.gitlab.arturbosch.detekt'

jar {
    baseName = 'svc-auth'
}

docker {
    name "${project.hasProperty("docker_tags") ? "${docker_tags}" : "${project.group}/${jar.baseName}"}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

detekt {
    version = detekt_version
    defaultProfile {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt-config.yml"
        output = "$buildDir/reports/detekt"
    }
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFix(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:$spring_boot_version")
    compile('com.google.guava:guava:28.0-jre')
    compile('io.opentracing.contrib:opentracing-spring-web-autoconfigure:0.3.2')
    compile('io.opentracing.brave:brave-opentracing:0.34.2')
    compile('io.zipkin.reporter2:zipkin-sender-okhttp3:2.10.2')
    compile("org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version")
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.9')
    compile('org.bitbucket.b_c:jose4j:0.6.5')

    compile("org.opensaml:opensaml-core:$opensaml_version")
    compile("org.opensaml:opensaml-saml-api:$opensaml_version")
    compile("org.opensaml:opensaml-saml-impl:$opensaml_version")
    compile("org.opensaml:opensaml-messaging-api:$opensaml_version")
    compile("org.opensaml:opensaml-messaging-impl:$opensaml_version")
    compile("org.opensaml:opensaml-soap-api:$opensaml_version")
    compile("org.opensaml:opensaml-soap-impl:$opensaml_version")

    compile('javax.xml.bind:jaxb-api:2.3.1') // for java 9 & above
    compile('com.sun.xml.bind:jaxb-core:2.3.0.1')
    compile('com.sun.xml.bind:jaxb-impl:2.3.2')
    compile('javax.activation:activation:1.1.1')

    testCompile("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")
    testCompile('org.apache.httpcomponents:httpclient:4.5.9')
    testCompile('io.mockk:mockk:1.9.3')

    ktlint("com.github.shyiko:ktlint:0.31.0")
}
test {
    reports {
        html.enabled = true
    }
}